use ("erp");

//Exercício 1
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
])
.pretty();

//Exercício 2
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
  {
    $match: {
      idade: { $gt: 18, $lt: 25 },
    },
  },
  {
    $count: "eighteenToTwentyFive",
  },
])
.pretty();

//Exercício 3
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: "vendas",
      localField: "clienteId",
      foreignField: "clienteId",
      as: "compras",
    },
  },
])
.pretty();

//Exercício 4
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: "vendas",
      localField: "clienteId",
      foreignField: "clienteId",
      as: "compras",
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gt: new Date("2019-06-01"),
            $lt: new Date("2020-03-31"),
          },
        },
      },
    },
  },
])
.pretty();

//Exercício 5
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: "vendas",
      localField: "clienteId",
      foreignField: "clienteId",
      as: "compras",
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gt: new Date("2019-06-01"),
            $lt: new Date("2020-03-31"),
          },
        },
      },
    },
  },
])
.itcount();

//Exercício 6
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: "vendas",
      localField: "clienteId",
      foreignField: "clienteId",
      as: "compras",
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gt: new Date("2019-06-01"),
            $lt: new Date("2020-03-31"),
          },
        },
      },
    },
  },
  {
    $unwind: "$compras",
  },
  {
    $group: {
      _id: "$endereco.uf",
      totalCompras: { $sum: 1 },
    },
  },
  {
    $sort: { totalCompras: -1 },
  },
  {
    $limit: 5,
  },
])
.pretty();

//Exercício 7
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: ["$$NOW", "$dataNascimento"] },
            { $multiply: [86400000, 365]},
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: "vendas",
      localField: "clienteId",
      foreignField: "clienteId",
      as: "compras",
    },
  },
  {
    $unwind: "$compras",
  },
  {
    $unwind: "$compras.itens",
  },
  {
    $match: { "compras.itens.nome": "QUEIJO PRATO" },
  },
  {
    $group: {
      _id: "$clienteId",
      totalConsumido: { $sum: "$compras.itens.quantidade" },
    },
  },
  {
    $sort: { totalConsumido: -1 },
  },
  {
    $lookup: {
      from: "clientes",
      localField: "_id",
      foreignField: "clienteId",
      as: "cliente",
    },
  },
  {
    $unwind: "$cliente",
  },
  {
    $project: {
      _id: false,
      nomeCliente: "$cliente.nome",
      uf: "$cliente.endereco.uf",
      totalConsumido: true,
    },
  },
  {
    $limit: 1,
  },
])
.pretty();